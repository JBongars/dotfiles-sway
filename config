exec ~/set_once.sh

input "type:keyboard" {
    xkb_layout "us"
    xkb_options "caps:hyper"
    # Alternative if the above doesn't work:
    # xkb_options "caps:none,altwin:hyper_win"
}

# sets display scaling to 1 for all displays
output * scale 1

font pango: Noto Sans Regular 10
# exec_always "setxkbmap -layout us -variant ,dvorak,phonetic -option grp:alt_shift_toggle"

# set leader key to hyper
set $mod Mod3

set $i3config $HOME/.config/sway
set $i3scripts $i3config/scripts

workspace_layout default

#border indicator on windows:
new_window pixel 1

# thin borders
hide_edge_borders both

# Make workspaces follow your focus between screens
workspace_auto_back_and_forth no
focus_follows_mouse yes

# Set inner/outer gaps
gaps inner 6
gaps outer 3

# show window title bars (not officially supported with i3gaps)
# default_border normal

# window title alignment
#title_align center

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# switch/iterate between workspaces
bindsym $mod+Tab workspace next
bindsym $mod+Shift+Tab workspace prev

# Add a binding to move workspaces between outputs (screens)
bindsym $mod+Shift+n move workspace to output right
# bindsym $mod+Shift+p move workspace to output left

# Focus right and left screens
bindsym $mod+n focus output right
# bindsym $mod+p focus output left

# switch to workspace
# bindcode $mod+10    workspace number $ws1
# bindcode $mod+11    workspace number $ws2
# bindcode $mod+12    workspace number $ws3
# bindcode $mod+13    workspace number $ws4
# bindcode $mod+14    workspace number $ws5
# bindcode $mod+15    workspace number $ws6
# bindcode $mod+16    workspace number $ws7
# bindcode $mod+17    workspace number $ws8
# bindcode $mod+18    workspace number $ws9

# switch to workspace - bring workspace to current screen
bindcode $mod+10 exec ~/.config/sway/scripts/force_workspace_current_screen.sh 1
bindcode $mod+11 exec ~/.config/sway/scripts/force_workspace_current_screen.sh 2
bindcode $mod+12 exec ~/.config/sway/scripts/force_workspace_current_screen.sh 3
bindcode $mod+13 exec ~/.config/sway/scripts/force_workspace_current_screen.sh 4
bindcode $mod+14 exec ~/.config/sway/scripts/force_workspace_current_screen.sh 5
bindcode $mod+15 exec ~/.config/sway/scripts/force_workspace_current_screen.sh 6
bindcode $mod+16 exec ~/.config/sway/scripts/force_workspace_current_screen.sh 7
bindcode $mod+17 exec ~/.config/sway/scripts/force_workspace_current_screen.sh 8
bindcode $mod+18 exec ~/.config/sway/scripts/force_workspace_current_screen.sh 9

# move focused container to workspace
bindcode $mod+Shift+10    move container to workspace  $ws1
bindcode $mod+Shift+11    move container to workspace  $ws2
bindcode $mod+Shift+12    move container to workspace  $ws3
bindcode $mod+Shift+13    move container to workspace  $ws4
bindcode $mod+Shift+14    move container to workspace  $ws5
bindcode $mod+Shift+15    move container to workspace  $ws6
bindcode $mod+Shift+16    move container to workspace  $ws7
bindcode $mod+Shift+17    move container to workspace  $ws8
bindcode $mod+Shift+18    move container to workspace  $ws9

######################################
# keybindings for different actions: #
######################################

# start a terminal
# bindsym $mod+Return exec xfce4-terminal
bindsym $mod+Return exec alacritty
# for emergencies
bindsym Mod4+Return exec alacritty

# kill focused window
bindsym $mod+q kill

# Kill all windows in current workspace
bindsym $mod+Shift+q exec "swaymsg '[workspace=__focused__] kill'"

# Use M-c and M-v for copy/paste with wayland
bindsym Mod1+c exec wl-copy
bindsym Mod1+v exec wl-paste

# exit-menu
#TODO: Find out about power menu
bindsym $mod+Shift+e exec ~/.config/sway/scripts/powermenu

# exit to lightdm login page
bindsym Ctrl+Mod1+q exec ~/.config/sway/scripts/lightdm-lock.sh
# bindsym $mod+l exec $i3scripts/lock
# exec xautolock -time 1 -locker $i3scripts/lock

# theme manager
# Set environment variables for Qt themes
set $QT_QPA_PLATFORMTHEME qt5ct

# Combined action: reload i3 config, restart i3, and apply xmodmap
bindsym Mod4+Shift+r exec "swaymsg reload"
bindsym $mod+Shift+r exec "swaymsg reload"

#TODO: Useful but need to fix wofi 

# keybinding in fancy wofi (automated):
bindsym $mod+F1 exec ~/.config/sway/scripts/keyhint-2

# Backlight control
#bindsym XF86MonBrightnessUp exec xbacklight +10 && notify-send "Brightness - $(xbacklight -get | cut -d '.' -f 1)%"
#bindsym XF86MonBrightnessDown exec xbacklight -10 && notify-send "Brightness - $(xbacklight -get | cut -d '.' -f 1)%"
# Backlight setting using dunst osc
bindsym XF86MonBrightnessUp exec ~/.config/sway/scripts/volume_brightness.sh brightness_up
bindsym XF86MonBrightnessDown exec ~/.config/sway/scripts/volume_brightness.sh brightness_down

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# # split in horizontal orientation
# bindsym $mod+s split h
# # split in vertical orientation
# bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

#NOTE: stacking is not useful. You can achieve the same thing with tabbed mode and there is a plugin to find window

# bindsym $mod+s layout stacking
bindsym $mod+g layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
# I do not use this
# bindsym $mod+a focus parent

# open new empty workspace
# bindsym $mod+Shift+n exec ~/.config/sway/scripts/empty_workspace

# Multimedia Keys

# volume
# use meta keys without showing osc
#bindsym XF86AudioRaiseVolume exec amixer -D pulse sset Master 5%+ && pkill -RTMIN+1 i3blocks
#bindsym XF86AudioLowerVolume exec amixer -D pulse sset Master 5%- && pkill -RTMIN+1 i3blocks
# use meta keys showing osc using dunst
bindsym XF86AudioRaiseVolume exec ~/.config/sway/scripts/volume_brightness.sh volume_up
bindsym XF86AudioLowerVolume exec ~/.config/sway/scripts/volume_brightness.sh volume_down

# gradular volume control
bindsym $mod+XF86AudioRaiseVolume exec amixer -D pulse sset Master 1%+ && pkill -RTMIN+1 i3blocks
bindsym $mod+XF86AudioLowerVolume exec amixer -D pulse sset Master 1%- && pkill -RTMIN+1 i3blocks

# mute
#bindsym XF86AudioMute exec amixer sset Master toggle && killall -USR1 i3blocks
# use meta keys showing osc using dunst
bindsym XF86AudioMute exec ~/.config/sway/scripts/volume_brightness.sh volume_mute

# mic mute toggle
bindsym XF86AudioMicMute exec amixer sset Capture toggle

# audio control
bindsym XF86AudioPlay exec playerctl play-pause 
# Above line will also work for pausing
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

# Redirect sound to headphones
# bindsym $mod+p exec /usr/local/bin/switch-audio-port

## App shortcuts
bindsym $mod+c exec /opt/chrome/chrome 
# bindsym $mod+z exec /usr/bin/thunar

# Full-screen screenshot (Print key) - saves to file and clipboard
bindsym Print exec grim /tmp/screenshot.png && \
    wl-copy --type image/png < /tmp/screenshot.png && \
    mv /tmp/screenshot.png ~/Pictures/.screenshots/$(date +"%Y-%m-%d-%T")-screenshot.png && \
    notify-send "Screenshot saved"

# Selection screenshot ($mod+Shift+d) - saves to file and clipboard
bindsym $mod+Shift+d exec grim -g "$(slurp)" /tmp/screenshot.png && \
    wl-copy --type image/png < /tmp/screenshot.png && \
    mv /tmp/screenshot.png ~/Pictures/.screenshots/$(date +"%Y-%m-%d-%T")-screenshot.png && \
    notify-send "Screenshot selection saved"

# Power Profiles menu switcher (wofi)
# bindsym $mod+Shift+p exec ~/.config/sway/scripts/power-profiles

# configuration for workspace behaviour: #
##########################################

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"

#TODO: This does no work

# bind program to workspace and focus to them on startup:
# assign [app_id="alacritty"] $ws1

# automatic set focus new window if it opens on another workspace than the current:
# for_window [app_id=alacritty] focus

##############
# compositor #
##############

#NOTE: To make the windows semi transparent but I don't use wallpapers

# transparency
# uncomment one of them to be used
# options could need changes, related to used GPU and drivers.
# to find the right setting consult the archwiki or ask at the forum.
#
# xcompmgr: https://wiki.archlinux.org/title/Xcompmgr
# manpage: https://man.archlinux.org/man/xcompmgr.1.en
# install xcompmgr package to use it (yay -S xcompmgr)
#exec xcompmgr -C -n &
# or an more specialized config like this:
#exec xcompmgr -c -C -t-5 -l-5 -r4.2 -o.55 &
#
# or:
#
# picom: https://wiki.archlinux.org/title/Picom
# manpage: https://man.archlinux.org/man/picom.1.en
# The default configuration is available in /etc/xdg/picom.conf 
# For modifications, it can be copied to ~/.config/picom/picom.conf or ~/.config/picom.conf
# install picom package (yay -S picom)
# start using default config 
#exec_always picom -b
#exec picom --config ~/.config/picom/picom.conf

#
# for custom config:
#exec_always picom --config  ~/.config/picom.conf

#############################################
# autostart applications/services on login: #
#############################################

#get auth work with polkit-gnome
exec /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1

# dex execute .desktop files + apps using /etc/xdg/autostart.
# when second to i3 a DE is installed or mixed usage of i3 + xfce4 or GNOME
# in this cases better disable dex and use manual starting apps using xdg/autostart
# if enabled you should comment welcome app.
# https://github.com/jceb/dex
#exec dex -a -s /etc/xdg/autostart/:~/.config/autostart/
exec dex --autostart --environment i3

# num lock activated
#exec numlockx on

# configure multiple keyboard layouts and hotkey to switch (Alt+CAPSLOCK in this example)
#exec setxkbmap -layout 'us,sk' -variant altgr-intl,qwerty -option 'grp:alt_caps_toggle'

# use arandr to setup displays and save the file as monitor:
exec ~/.screenlayout/00-default

# set wallpaper
# exec sleep 2 && nitrogen --restore
# output * bg /path/to/wallpaper fill
output * bg "#000000" solid

# set powersavings for display:
exec swayidle -w timeout 480 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"'

# disable power saving (for example if using xscreensaver)
#exec xset -dpms

#NOTE: I realise auto-locks are not useful

# use xautolock to use autosuspend rules for mobile devices
# https://wiki.archlinux.org/title/Session_lock#xautolock
# exec xautolock -time 60 -notify 30 -notifier "notify-send 'Locking screen in 30 seconds'" -locker "i3lock" --suspend
# exec xautolock -time 60 -notify 30 -notifier "notify-send 'Locking screen in 30 seconds'" -locker "i3lock" -killer "systemctl suspend" -killtime 65


# Desktop notifications
exec dbus-launch /usr/bin/dunst --config ~/.config/sway/.dunst/dunstrc -print | tee -a ~/.logs/dunst
# exec /usr/bin/dunst --config ~/.config/sway/.dunst/dunstrc -print | tee -a ~/.logs/dunst

#WARN: This does not work with tabbed mode

# autotiling script
# https://github.com/nwg-piotr/autotiling
# `yay -S autotiling 
# exec_always autotiling

###############
# system tray #
###############
# if you do not use dex: exec dex --autostart --environment i3
# you need to have tray apps started manually one by one:

# start blueman app for managing bluetooth devices from tray:
exec blueman-tray

# networkmanager-applet
exec nm-applet

# wl-paste applet
exec wl-paste --watch cliphist store

##################
# floating rules #
##################

# set floating (nontiling) for apps needing it
for_window [app_id="yad" instance="yad"] floating enable
for_window [app_id="galculator" instance="galculator"] floating enable
for_window [app_id="blueberry.py" instance="blueberry.py"] floating enable

for_window [class="Yad" instance="yad"] floating enable
for_window [class="Galculator" instance="galculator"] floating enable
for_window [class="Blueberry.py" instance="blueberry.py"] floating enable

# set floating (nontiling) for special apps
for_window [app_id="Xsane" instance="xsane"] floating enable
for_window [app_id="Pavucontrol" instance="pavucontrol"] floating enable
for_window [app_id="qt5ct" instance="qt5ct"] floating enable
for_window [app_id="Blueberry.py" instance="blueberry.py"] floating enable
for_window [app_id="Bluetooth-sendto" instance="bluetooth-sendto"] floating enable
for_window [app_id="Pamac-manager"] floating enable

for_window [class="xsane" instance="xsane"] floating enable
for_window [class="pavucontrol" instance="pavucontrol"] floating enable
for_window [class="qt5ct" instance="qt5ct"] floating enable
for_window [class="blueberry.py" instance="blueberry.py"] floating enable
for_window [class="bluetooth-sendto" instance="bluetooth-sendto"] floating enable
for_window [class="pamac-manager"] floating enable

for_window [window_role="About"] floating enable

# set border of floating window
for_window [app_id="urxvt"] border pixel 1

# set size of floating window
#for_window [window_role="(?i)GtkFileChooserDialog"] resize set 640 480 #to set size of file choose dialog
#for_window [app_id=".*"] resize set 640 480 #to change size of all floating windows 

# set position of floating window
#for_window [app_id=".*"] move position center

######################################
# color settings for bar and windows #
######################################

# Define colors variables:
set $darkbluetrans	#08052be6
set $darkblue		#08052b
set $lightblue		#5294e2
set $urgentred		#e53935
set $white		#ffffff
set $black		#000000
set $purple		#e345ff
set $darkgrey		#383c4a
set $grey		#b0b5bd
set $mediumgrey		#8b8b8b
set $yellowbrown	#e1b700

# define colors for windows:
#class		        	border		bground		text		indicator	child_border
client.focused		    	$lightblue	$darkblue	$white		$mediumgrey	$mediumgrey
client.unfocused	    	$darkblue	$darkblue	$grey		$darkgrey	$darkgrey
client.focused_inactive		$darkblue	$darkblue	$grey		$black		$black
client.urgent		    	$urgentred	$urgentred	$white		$yellowbrown	$yellowbrown

############################################
# bar settings (input comes from i3blocks) #
############################################

# Start i3bar to display a workspace bar
# (plus the system information i3status finds out, if available)
# bar {
# 		font pango: Noto Sans Regular 10
# 		status_command i3blocks -c ~/.config/sway/i3blocks.conf
# 	    	position bottom
# #	    	i3bar_command i3bar --transparency
# # it could be that you have no primary display set: set one (xrandr --output <output> --primary)
# # reference: https://i3wm.org/docs/userguide.html#_tray_output
# 		    #tray_output primary
# 		    tray_padding 0
#
# # When strip_workspace_numbers is set to yes,
# # any workspace that has a name of the form
# # “[n][:][NAME]” will display only the name.
# # strip_workspace_numbers yes
# strip_workspace_name no
#
# 		    colors {
# 		    separator          $purple
# 		    background         $darkgrey
# 		    statusline         $white
# #                          		border 		        bg		txt		indicator
# 		focused_workspace	$mediumgrey	   	$grey		$darkgrey	$purple
# 		active_workspace	$lightblue      	$mediumgrey	$darkgrey	$purple
# 		inactive_workspace	$darkgrey   		$darkgrey	$grey		$purple
# 		urgent_workspace	$urgentred	    	$urgentred	$white		$purple
# 	}
# }

exec_always waybar


# you can add different bars for multidisplay setups on each display:
# set output HDMI-0 to the display you want the bar, --transparency can be set.
# Transparency needs rgba color codes to be used where the last two letters are the transparency factor see here:
# https://gist.github.com/lopspower/03fb1cc0ac9f32ef38f4
# #08052be6 --> e6=90%

# bar {
#	font pango: Noto Sans Regular 10
#	status_command i3blocks -c ~/.config/sway/i3blocks-2.conf
#	i3bar_command i3bar --transparency
#	output HDMI-0
#	position bottom
#
# When strip_workspace_numbers is set to yes,
# any workspace that has a name of the form
# “[n][:][NAME]” will display only the name.
#strip_workspace_numbers yes
##strip_workspace_name no
#
#	colors {
#		separator          $purple
#		background         $darkbluetrans
#        	statusline         $white
#					border		bg		txt		indicator
#		focused_workspace	$lighterblue	$lighterblue	$darkblue	$purple
#		active_workspace	$lightdblue	$lightdblue	$darkblue	$purple
#		inactive_workspace	$darkblue	$darkblue	$lightdblue	$purple
#		urgent_workspace	$urgentred	$urgentred	$white		$purple
#	}
#}

#####################################
# Application menu handled by wofi : #
#####################################

## wofi bindings fancy application menu ($mod+d /F9 optional disabled)
bindsym $mod+d exec wofi --show drun

## wofi bindings for window menu ($mod+t /F10 optional disabled)

bindsym $mod+t exec wofi -show window

#bindsym F10 exec wofi -show window \
#		-config ~/.config/sway/.wofi/wofidmenu.rasi

## wofi bindings to manage clipboard (install wofi-greenclip from the AUR)

#exec greenclip daemon>/dev/null
#bindsym $mod+c exec wofi -modi "clipboard:greenclip print" -show clipboard \
#		-config ~/.config/sway/.wofi/wofidmenu.rasi

#####################################
# Application menu handled by wofi: #
#####################################

#TODO replace with warpd
# bindsym $mod+semicolon exec keynav -f ~/.config/sway/.keynav
# exec keynav daemonize -f ~/.config/sway/.keynav


#########################################################3
# USER CONFIG
#########################################################3

# auto mount USB devices
exec udiskie --tray

exec ~/set_once.sh

# Environment variables
exec export XDG_CURRENT_DESKTOP=sway
exec export XDG_SESSION_DESKTOP=sway
exec export XDG_SESSION_TYPE=wayland

# import variables from systemd for UI elements to display correctly
exec systemctl --user import-environment DISPLAY WAYLAND_DISPLAY SWAYSOCK XDG_CURRENT_DESKTOP
exec dbus-update-activation-environment --systemd DISPLAY WAYLAND_DISPLAY SWAYSOCK XDG_CURRENT_DESKTOP

# Update systemd and dbus with the environment
exec dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP XDG_SESSION_TYPE
exec systemctl --user import-environment WAYLAND_DISPLAY XDG_CURRENT_DESKTOP XDG_SESSION_TYPE

# Theme issue. Force dark theme
exec systemctl --user set-environment GTK_THEME=Arc-Dark
exec systemctl --user set-environment GTK2_RC_FILES=/usr/share/themes/Arc-Dark/gtk-2.0/gtkrc
exec systemctl --user set-environment QT_STYLE_OVERRIDE=Arc-Dark

# Configure gsettings (needed for some apps that ignore env vars)
exec_always {
    gsettings set org.gnome.desktop.interface gtk-theme 'Arc-Dark'
    gsettings set org.gnome.desktop.interface color-scheme 'prefer-dark'
}

# Set environment variables for Qt themes
set $QT_QPA_PLATFORMTHEME qt5ct

include ~/.screenlayout.sway

input "type:keyboard" {
    xkb_layout "us,us"
    xkb_variant "dvorak,"

    # Alt+Shift toggle
    # xkb_options "grp:alt_shift_toggle,caps:hyper"     

    # Right Alt+Shift toggle
    # xkb_options "grp:ralt_shift_toggle,caps:hyper"    

    # Scroll Lock key
    xkb_options "grp:sclk_toggle,caps:hyper"            

    # Right Windows/Super key
    # xkb_options "grp:rwin_toggle,caps:hyper"          
}

# sets display scaling to 1 for all displays
output * scale 1

font pango: Noto Sans Regular 10
# exec_always "setxkbmap -layout us -variant ,dvorak,phonetic -option grp:alt_shift_toggle"

# set leader key to hyper
set $mod Mod3

# set other environment variables
set $terminal_client alacritty

set $i3config $HOME/.config/sway
set $i3scripts $i3config/scripts

workspace_layout default

#border indicator on windows:
default_border pixel 1
default_floating_border pixel 1

# thin borders
hide_edge_borders both

# Make workspaces follow your focus between screens
workspace_auto_back_and_forth no
focus_follows_mouse yes

# Set inner/outer gaps
smart_gaps on
gaps inner 6
gaps outer 3

# show window title bars (not officially supported with i3gaps)
# default_border normal

# window title alignment
#title_align center

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# switch/iterate between workspaces
bindsym $mod+Tab workspace next
bindsym $mod+Shift+Tab workspace prev

# Add a binding to move workspaces between outputs (screens)
bindsym $mod+Shift+n move workspace to output right
# bindsym $mod+Shift+p move workspace to output left

# Focus right and left screens
bindsym $mod+n focus output right
# bindsym $mod+p focus output left

# switch to workspace - bring workspace to current screen
bindcode $mod+10       exec ~/.config/sway/scripts/force_workspace_current_screen.sh 1
bindcode $mod+11       exec ~/.config/sway/scripts/force_workspace_current_screen.sh 2
bindcode $mod+12       exec ~/.config/sway/scripts/force_workspace_current_screen.sh 3
bindcode $mod+13       exec ~/.config/sway/scripts/force_workspace_current_screen.sh 4
bindcode $mod+14       exec ~/.config/sway/scripts/force_workspace_current_screen.sh 5
bindcode $mod+15       exec ~/.config/sway/scripts/force_workspace_current_screen.sh 6
bindcode $mod+16       exec ~/.config/sway/scripts/force_workspace_current_screen.sh 7
bindcode $mod+17       exec ~/.config/sway/scripts/force_workspace_current_screen.sh 8
bindcode $mod+18       exec ~/.config/sway/scripts/force_workspace_current_screen.sh 9

# move focused container to workspace
bindcode $mod+Shift+10 move container to workspace 1
bindcode $mod+Shift+11 move container to workspace 2
bindcode $mod+Shift+12 move container to workspace 3
bindcode $mod+Shift+13 move container to workspace 4
bindcode $mod+Shift+14 move container to workspace 5
bindcode $mod+Shift+15 move container to workspace 6
bindcode $mod+Shift+16 move container to workspace 7
bindcode $mod+Shift+17 move container to workspace 8
bindcode $mod+Shift+18 move container to workspace 9

######################################
# keybindings for different actions: #
######################################

# start a terminal
# bindsym $mod+Return exec xfce4-terminal
bindsym $mod+Return exec $terminal_client
# for emergencies
bindsym Mod4+Return exec $terminal_client

# kill focused window
bindsym $mod+q kill

# Kill all windows in current workspace
# bindsym $mod+Shift+q exec "swaymsg '[workspace=__focused__] kill'"

bindsym $mod+Shift+q mode "rm_workspace"

# resize window
mode "rm_workspace" {
    # bindsym $mod+q exec "swaymsg '[workspace=__focused__] kill'" , mode "default"
    bindsym $mod+q exec ~/.config/sway/scripts/organise-desktop.sh , mode "default"

    bindsym 1 exec "swaymsg '[workspace=1] kill'" , mode "default"
    bindsym 2 exec "swaymsg '[workspace=2] kill'" , mode "default"
    bindsym 3 exec "swaymsg '[workspace=3] kill'" , mode "default"
    bindsym 4 exec "swaymsg '[workspace=4] kill'" , mode "default"
    bindsym 5 exec "swaymsg '[workspace=5] kill'" , mode "default"
    bindsym 6 exec "swaymsg '[workspace=6] kill'" , mode "default"
    bindsym 7 exec "swaymsg '[workspace=7] kill'" , mode "default"
    bindsym 8 exec "swaymsg '[workspace=8] kill'" , mode "default"
    bindsym 9 exec "swaymsg '[workspace=9] kill'" , mode "default"

    # Exit mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

# Use M-c and M-v for copy/paste with wayland
bindsym Alt+c exec ~/.config/sway/scripts/send-copy.sh
bindsym Alt+v exec ~/.config/sway/scripts/send-paste.sh

# alt copy and paste keys if one hand is on the mouse
bindsym Alt+j exec ~/.config/sway/scripts/send-copy.sh
bindsym Alt+k exec ~/.config/sway/scripts/send-paste.sh

# Terminate current user session (logout)
# bindsym Ctrl+Mod1+q exec loginctl terminate-session $XDG_SESSION_ID
# bindsym Ctrl+Mod1+q exec swaymsg exit
bindsym Ctrl+Mod1+q exec ~/.config/sway/scripts/gracefully-terminate-session.sh

# Screen idle/lock management - 120 minutes timeout
exec swayidle -w \
    timeout 7200 'swaymsg "output * power off"' \
    resume 'swaymsg "output * power on"' \
    before-sleep 'swaylock -f -c 000000'

# Manual screen lock with custom config
bindsym Ctrl+shift+q exec swaylock -f \
    --config "$HOME/.config/sway/.swaylock/config" \
    --screenshots \
    --ignore-empty-password \
    --daemonize \
    --indicator-caps-lock \
    --indicator \
    --clock \
    --timestr "%Hh %Mm %Ss" \
    --datestr "%b-%d-%Y" \
    --show-failed-attempts \
    --indicator-idle-visible

# theme manager

# Combined action: reload i3 config, restart i3, and apply xmodmap
bindsym Mod4+Shift+r exec "swaymsg reload"
bindsym $mod+Shift+r exec "swaymsg reload"

#TODO: Useful but need to fix wofi 

# keybinding in fancy wofi (automated):
bindsym $mod+F1 exec ~/.config/sway/scripts/keyhint-2

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# Enter resize mode
bindsym $mod+r mode "resize"

# resize window
mode "resize" {
    # Resize with hjkl (vim-like)
    bindsym h resize grow width 5 px or 5 ppt
    bindsym j resize shrink height 5 px or 5 ppt
    bindsym k resize grow height 5 px or 5 ppt
    bindsym l resize shrink width 5 px or 5 ppt

    # Or use arrow keys
    bindsym Left resize grow width 5 px or 5 ppt
    bindsym Down resize shrink height 5 px or 5 ppt
    bindsym Up resize grow height 5 px or 5 ppt
    bindsym Right resize shrink width 5 px or 5 ppt

    # Exit resize mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym $mod+r mode "default"
}

# split in horizontal orientation
bindsym $mod+v split h
# split in vertical orientation
bindsym $mod+s split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle
# chrome doesn't seem to work with $mod+f
bindsym $mod+p fullscreen toggle

#NOTE: stacking is not useful. You can achieve the same thing with tabbed mode and there is a plugin to find window

# bindsym $mod+s layout stacking
bindsym $mod+a focus parent
bindsym $mod+Shift+a focus child

bindsym $mod+g layout tabbed
bindsym $mod+Shift+g [workspace=__focused__] layout tabbed
bindsym $mod+e layout toggle split

# Doesn't work well when switching to tabbed mode
# autotiling script
# https://github.com/nwg-piotr/autotiling
# `yay -S autotiling 
# exec_always autotiling

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# open new empty workspace
# bindsym $mod+Shift+n exec ~/.config/sway/scripts/empty_workspace

# Multimedia Keys
exec avizo-service &

# Volume controls
bindsym --locked XF86AudioRaiseVolume exec volumectl -u up
bindsym --locked XF86AudioLowerVolume exec volumectl -u down  
bindsym --locked XF86AudioMute exec volumectl toggle-mute

# Brightness controls
bindsym --locked XF86MonBrightnessUp exec lightctl up
bindsym --locked XF86MonBrightnessDown exec lightctl down

# Acme mouse buttons (WIP)
bindsym --whole-window BTN_SIDE exec ~/.config/sway/scripts/acme.sh "BTN_SIDE"
bindsym --whole-window BTN_EXTRA exec ~/.config/sway/scripts/acme.sh "BTN_EXTRA"

## App shortcuts

# We no longer use chrome.
# bindsym $mod+c mode "chrome"
# 
# mode "chrome" {
#     # Default profile
#     bindsym c exec /opt/chrome/chrome, mode "default"
#     
#     # Profiles 1-9
#     bindsym 0 exec /opt/google/chrome/chrome --profile-directory="Default"   --restore-last-session, mode "default"
#     bindsym 1 exec /opt/google/chrome/chrome --profile-directory="Profile 1" --restore-last-session, mode "default"
#     bindsym 2 exec /opt/google/chrome/chrome --profile-directory="Profile 2" --restore-last-session, mode "default"
#     bindsym 3 exec /opt/google/chrome/chrome --profile-directory="Profile 3" --restore-last-session, mode "default"
#     bindsym 4 exec /opt/google/chrome/chrome --profile-directory="Profile 4" --restore-last-session, mode "default"
#     bindsym 5 exec /opt/google/chrome/chrome --profile-directory="Profile 5" --restore-last-session, mode "default"
#     bindsym 6 exec /opt/google/chrome/chrome --profile-directory="Profile 6" --restore-last-session, mode "default"
#     bindsym 7 exec /opt/google/chrome/chrome --profile-directory="Profile 7" --restore-last-session, mode "default"
#     bindsym 8 exec /opt/google/chrome/chrome --profile-directory="Profile 8" --restore-last-session, mode "default"
#     bindsym 9 exec /opt/google/chrome/chrome --profile-directory="Profile 9" --restore-last-session, mode "default"
#     
#     # Exit mode
#     bindsym Escape mode "default"
# }

bindsym $mod+c mode "firefox"

mode "firefox" {
    # Default profile
    bindsym c exec firefox, mode "default"
    
    # Profiles 0-
    bindsym 0 exec ~/.config/sway/scripts/start-firefox.sh "default-release",   mode "default"
    bindsym 1 exec ~/.config/sway/scripts/start-firefox.sh "1",                 mode "default"
    bindsym 2 exec ~/.config/sway/scripts/start-firefox.sh "2",                 mode "default"
    bindsym 3 exec ~/.config/sway/scripts/start-firefox.sh "3",                 mode "default"
    bindsym 4 exec ~/.config/sway/scripts/start-firefox.sh "4",                 mode "default"
    bindsym 5 exec ~/.config/sway/scripts/start-firefox.sh "5",                 mode "default"
    bindsym 6 exec ~/.config/sway/scripts/start-firefox.sh "6",                 mode "default"
    bindsym 7 exec ~/.config/sway/scripts/start-firefox.sh "7",                 mode "default"
    bindsym 8 exec ~/.config/sway/scripts/start-firefox.sh "8",                 mode "default"
    bindsym 9 exec ~/.config/sway/scripts/start-firefox.sh "9",                 mode "default"
    
    # Exit mode
    bindsym Escape mode "default"
}

# Full-screen screenshot (Print key) - saves to file and clipboard
bindsym Print exec grim /tmp/screenshot.png && \
    wl-copy --type image/png < /tmp/screenshot.png && \
    mv /tmp/screenshot.png ~/Pictures/.screenshots/$(date +"%Y-%m-%d-%T")-screenshot.png && \
    notify-send "Screenshot saved"

# Selection screenshot ($mod+Shift+d) - saves to file and clipboard
bindsym $mod+Shift+d exec grim -g "$(slurp)" /tmp/screenshot.png && \
    wl-copy --type image/png < /tmp/screenshot.png && \
    mv /tmp/screenshot.png ~/Pictures/.screenshots/$(date +"%Y-%m-%d-%T")-screenshot.png && \
    notify-send "Screenshot selection saved"

#############################################
# autostart applications/services on login: #
#############################################

#get auth work with polkit-gnome
# exec /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1

# dex execute .desktop files + apps using /etc/xdg/autostart.
# when second to i3 a DE is installed or mixed usage of i3 + xfce4 or GNOME
# in this cases better disable dex and use manual starting apps using xdg/autostart
# if enabled you should comment welcome app.
# https://github.com/jceb/dex
#exec dex -a -s /etc/xdg/autostart/:~/.config/autostart/
# exec dex --autostart --environment i3

# num lock activated
#exec numlockx on

# configure multiple keyboard layouts and hotkey to switch (Alt+CAPSLOCK in this example)
#exec setxkbmap -layout 'us,sk' -variant altgr-intl,qwerty -option 'grp:alt_caps_toggle'

# use arandr to setup displays and save the file as monitor:
exec ~/.screenlayout/00-default

# set wallpaper
# output * bg "#000000" solid_color
output * bg ~/wallpaper.jpg fill #000000

# Image options
# output * bg ~/wallpaper.jpg fill
# output * bg ~/wallpaper.jpg fit  
# output * bg ~/wallpaper.jpg stretch
# output * bg ~/wallpaper.jpg center
# output * bg ~/wallpaper.jpg tile

# Desktop notifications
# exec dunst --config ~/.config/sway/.dunst/dunstrc -print | tee -a ~/.logs/dunst
# exec mako -c ~/.config/sway/.mako/config
exec mako

###############
# system tray #
###############
# if you do not use dex: exec dex --autostart --environment i3
# you need to have tray apps started manually one by one:

# start blueman app for managing bluetooth devices from tray:
exec blueman-tray
exec blueman-applet

# networkmanager-applet
exec nm-applet

# wl-paste applet
exec wl-paste --watch cliphist store

##################
# floating rules #
##################

# set floating (nontiling) for apps needing it
# for_window [app_id="galculator" instance="galculator"] floating enable
# for_window [class="Galculator" instance="galculator"] floating enable

# set border of floating window
for_window [app_id="urxvt"] border pixel 1

# set size of floating window
#for_window [window_role="(?i)GtkFileChooserDialog"] resize set 640 480 #to set size of file choose dialog
#for_window [app_id=".*"] resize set 640 480 #to change size of all floating windows 

# set position of floating window
#for_window [app_id=".*"] move position center

######################################
# color settings for bar and windows #
######################################

# Define colors variables:
set $darkbluetrans	#08052be6
set $darkblue		#08052b
set $lightblue		#5294e2
set $urgentred		#e53935
set $white		#ffffff
set $black		#000000
set $purple		#e345ff
set $darkgrey		#383c4a
set $grey		#b0b5bd
set $mediumgrey		#8b8b8b
set $yellowbrown	#e1b700

# define colors for windows:
#class		        	border		bground		text		indicator	child_border
client.focused		    	$lightblue	$darkblue	$white		$mediumgrey	$mediumgrey
client.unfocused	    	$darkblue	$darkblue	$grey		$darkgrey	$darkgrey
client.focused_inactive		$darkblue	$darkblue	$grey		$black		$black
client.urgent		    	$urgentred	$urgentred	$white		$yellowbrown	$yellowbrown


exec_always "pkill waybar; sleep 0.1; waybar -c ~/.config/sway/.waybar/config -s ~/.config/sway/.waybar/style.css"

#####################################
# Application menu handled by wofi : #
#####################################

## wofi bindings fancy application menu ($mod+d /F9 optional disabled)
# bindsym $mod+d exec wofi --show drun
bindsym $mod+d exec wofi --show drun --conf ~/.config/sway/.wofi/config
# bindsym $mod+d exec rofi -show drun -display-drun "Apps: " -drun-display-format "{name} [{exec}]"
# bindsym $mod+d exec rofi -modi drun -show drun

## wofi bindings for window menu ($mod+t /F10 optional disabled)

bindsym $mod+t exec wofi -show window

#bindsym F10 exec wofi -show window \
#		-config ~/.config/sway/.wofi/wofidmenu.rasi

## wofi bindings to manage clipboard (install wofi-greenclip from the AUR)

#exec greenclip daemon>/dev/null
#bindsym $mod+c exec wofi -modi "clipboard:greenclip print" -show clipboard \
#		-config ~/.config/sway/.wofi/wofidmenu.rasi

#####################################
# Application menu handled by wofi: #
#####################################

# Enter warpd mode
bindsym $mod+semicolon mode "warpd"

mode "warpd" {
    bindsym h exec warpd --hint --config ~/.config/sway/.warpd/config; mode "default"
    bindsym shift+h exec warpd --hint2 --config ~/.config/sway/.warpd/config; mode "default" 
    bindsym g exec warpd --grid --config ~/.config/sway/.warpd/config; mode "default"
    bindsym c exec warpd --normal --config ~/.config/sway/.warpd/config; mode "default"
    bindsym semicolon exec warpd --history --config ~/.config/sway/.warpd/config; mode "default"
    bindsym s exec warpd --screen --config ~/.config/sway/.warpd/config; mode "default"
    
    # *--oneshot*: When paired with one of the mode flags, exit warpd as soon as the mode is complete (i.e don't drop into normal mode). When used with normal mode, exit as soon as a mouse button is pressed (without pressing it). If no mode flag is specified, the default behaviour is the same as --normal --oneshot. Principally useful for scripting.
    # *-q*, *--query*: Consume a list of hints from stdin and print the result to stdout (in the form <x> <y> <hint>). Each line should have the form *<label> <x> <y>*. May be used in conjunction with --click.
    # *--drag*: Automatically start a drag operation when paired with --normal.
    # *--move '<x> <y>'*: Move the pointer to the specified coordinates and exit.
    # *--click <button>*: Send a mouse click corresponding to the supplied button and exit. May be paired with --move or --oneshot (in which case the click will occur at the end of the selection).
    # *--record*: When used with --click, adds the click event to warpd's history.
    
    # Exit mode
    bindsym Escape mode "default"
    bindsym Return mode "default"
    bindsym q mode "default"
}



#####################################
# Command Mode                      #
#####################################
# bindsym $mod+colon exec echo "" | wofi --dmenu --prompt "sway:" | xargs -I {} swaymsg {}
bindsym $mod+colon exec ~/.config/sway/scripts/sway-commander.sh

#########################################################3
# USER CONFIG
#########################################################3

# auto mount USB devices
exec udiskie --tray
